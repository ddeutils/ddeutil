name: test

on:
  push:
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.rst'
  pull_request:
    branches:
      - "main"
      - "*.*.*"
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '*.rst'

permissions:
  contents: read

defaults:
  run:
    shell: bash

jobs:

  tests:
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        python-version:
          - "3.9"
          - "3.10"
          - "3.11"
          - "3.12"

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}

      - uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: ${{ runner.os }}-python-${{ steps.setup_python.outputs.python-version }}-${{ hashFiles('pyproject.toml') }}-test

      - name: Install Python Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv venv
          uv pip install -U pip
          uv pip install -e .
          uv pip install pytest

      - name: Use Python virtual environment
        run: |
          echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/.venv" >> $GITHUB_ENV

      - name: Check git is working
        run: |
          git config --global user.email "ddeutils@github.actions"
          git config --global user.name "Testing Git on Testing"
          git --version
          git config --list

      - name: Test with Pytest
        run: |
          pytest -v

  tests-import:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.9"

      - uses: actions/cache@v4
        id: cache
        with:
          path: .venv
          key: ubuntu-latest-python39-${{ hashFiles('pyproject.toml') }}-test-import

      - name: Install Python Dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          uv venv
          uv pip install -U pip
          uv pip install -e .

      - name: Use Python virtual environment
        run: |
          echo "$GITHUB_WORKSPACE/.venv/bin" >> $GITHUB_PATH
          echo "VIRTUAL_ENV=$GITHUB_WORKSPACE/.venv" >> $GITHUB_ENV

      - name: Test Import package
        run: |
          python -c "import sys; from src.ddeutil.core import merge_dict; print('Able to import core package'); sys.exit(0)"
